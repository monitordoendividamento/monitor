/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/seaborn/matrix.py:260: FutureWarning: Format strings passed to MaskedConstant are ignored, but in future may error or produce different behavior
  annotation = ("{:" + self.fmt + "}").format(val)
/Users/brunamoura/monitor/py_files/df_corr_porte_pf.py:164: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  series_bacen_limpo['data'] = pd.to_datetime(series_bacen_limpo['data'])
/Users/brunamoura/monitor/py_files/df_corr_porte_pf.py:170: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  series_bacen_limpo['data'] = series_bacen_limpo['data'].dt.strftime('%Y')
/Users/brunamoura/monitor/py_files/df_corr_porte_pf.py:177: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  series_bacen_limpo[col] = series_bacen_limpo[col].astype(float)
/Users/brunamoura/monitor/py_files/df_corr_porte_pf.py:177: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  series_bacen_limpo[col] = series_bacen_limpo[col].astype(float)
/Users/brunamoura/monitor/py_files/df_corr_porte_pf.py:177: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  series_bacen_limpo[col] = series_bacen_limpo[col].astype(float)
/Users/brunamoura/monitor/py_files/df_corr_porte_pf.py:177: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  series_bacen_limpo[col] = series_bacen_limpo[col].astype(float)
/Users/brunamoura/monitor/py_files/df_corr_porte_pf.py:177: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  series_bacen_limpo[col] = series_bacen_limpo[col].astype(float)
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/seaborn/matrix.py:260: FutureWarning: Format strings passed to MaskedConstant are ignored, but in future may error or produce different behavior
  annotation = ("{:" + self.fmt + "}").format(val)
Traceback (most recent call last):
  File "/Users/brunamoura/monitor/py_files/df_corr_porte_pf.py", line 285, in <module>
    df_scatter_plot = pd.merge(series_bacen_limpo,
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/pandas/core/reshape/merge.py", line 169, in merge
    op = _MergeOperation(
         ^^^^^^^^^^^^^^^^
  File "/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/pandas/core/reshape/merge.py", line 804, in __init__
    self._maybe_coerce_merge_keys()
  File "/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/pandas/core/reshape/merge.py", line 1485, in _maybe_coerce_merge_keys
    raise ValueError(msg)
ValueError: You are trying to merge on object and datetime64[ns] columns for key 'data'. If you wish to proceed you should use pd.concat
/Users/brunamoura/monitor/py_files/pf_juros_inflacao_modalidade_endividamentolp.py:14: UserWarning: 
The dash_core_components package is deprecated. Please replace
`import dash_core_components as dcc` with `from dash import dcc`
  import dash_core_components as dcc
/Users/brunamoura/monitor/py_files/pf_juros_inflacao_modalidade_endividamentolp.py:15: UserWarning: 
The dash_html_components package is deprecated. Please replace
`import dash_html_components as html` with `from dash import html`
  import dash_html_components as html
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
/Users/brunamoura/monitor/py_files/PJ_agro.py:106: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_total_2022['perc'] = df_total_2022['valor_deflacionado']/soma_valor_deflacionado * 100
/Users/brunamoura/monitor/py_files/PJ_agro.py:131: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_acumulado_corte['cnae_secao'] = df_acumulado_corte['cnae_secao'].str.replace("PJ - ", "")
/Users/brunamoura/monitor/py_files/PJ_agro.py:132: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_acumulado_corte['cnae_subclasse'] = df_acumulado_corte['cnae_subclasse'].str.replace("PJ - ", "")
/Users/brunamoura/monitor/py_files/PJ_agro.py:133: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_acumulado_corte['cnae_subclasse'] = df_acumulado_corte['cnae_subclasse'].str.replace("-", "Indispon√≠vel")
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
Traceback (most recent call last):
  File "/Users/brunamoura/monitor/py_files/pf_modalidade_endividamentolp_inflacao.py", line 84, in <module>
    df_total['valor_deflacionado'] = dbr.deflate(nominal_values=nominal_values, nominal_dates=nominal_dates, real_date=real_date,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py", line 88, in deflate
    df['deflated'] = df[['nom_values', 'VALVALOR']].progress_apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/tqdm/std.py", line 888, in inner
    t = cls(total=total, **tqdm_kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/tqdm/notebook.py", line 233, in __init__
    self.container = self.status_printer(self.fp, total, self.desc, self.ncols)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/tqdm/notebook.py", line 108, in status_printer
    raise ImportError(WARN_NOIPYW)
ImportError: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html
Exception ignored in: <function tqdm.__del__ at 0x13c713100>
Traceback (most recent call last):
  File "/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/tqdm/std.py", line 1149, in __del__
    self.close()
  File "/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/tqdm/notebook.py", line 278, in close
    self.disp(bar_style='danger', check_delay=False)
    ^^^^^^^^^
AttributeError: 'tqdm_notebook' object has no attribute 'disp'
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
Arquivo planilha_2023.zip baixado com sucesso!
Arquivo extra√≠do: planilha_202308.csv
Arquivo extra√≠do: planilha_202302.csv
Arquivo extra√≠do: planilha_202303.csv
Arquivo extra√≠do: planilha_202301.csv
Arquivo extra√≠do: planilha_202304.csv
Arquivo extra√≠do: planilha_202305.csv
Arquivo extra√≠do: planilha_202307.csv
Arquivo extra√≠do: planilha_202306.csv
['planilha_202308.csv', 'planilha_202302.csv', 'planilha_202303.csv', 'planilha_202301.csv', 'planilha_202304.csv', 'planilha_202305.csv', 'planilha_202307.csv', 'planilha_202306.csv']
planilha_202308.csv
planilha_202307.csv planilha_202308.csv
O arquivo /Users/brunamoura/monitor/py_files/2023-10-29_13-25-27.txt foi criado com sucesso.
/Users/brunamoura/monitor/py_files/df_corr_ibge_scr_pj.py
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 231 entries, 0 to 230
Data columns (total 5 columns):
 #   Column              Non-Null Count  Dtype  
---  ------              --------------  -----  
 0   data_base           231 non-null    object 
 1   cnae_secao          231 non-null    object 
 2   carteira_ativa      231 non-null    float64
 3   ativo_problematico  231 non-null    float64
 4   Se√ß√£o CNAE e ano    231 non-null    object 
dtypes: float64(2), object(3)
memory usage: 9.2+ KB

/Users/brunamoura/monitor/py_files/df_corr_porte_pf.py
<class 'pandas.core.frame.DataFrame'>
Index: 935619 entries, 0 to 136400
Data columns (total 5 columns):
 #   Column              Non-Null Count   Dtype         
---  ------              --------------   -----         
 0   data_base           935619 non-null  datetime64[ns]
 1   porte               935619 non-null  object        
 2   carteira_ativa      935619 non-null  float64       
 3   ativo_problematico  935619 non-null  float64       
 4   mes                 935619 non-null  int32         
dtypes: datetime64[ns](1), float64(2), int32(1), object(1)
memory usage: 39.3+ MB
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 11 entries, 0 to 10
Data columns (total 9 columns):
 #   Column                                 Non-Null Count  Dtype  
---  ------                                 --------------  -----  
 0   data_base                              11 non-null     object 
 1   ativo_problematico_alta renda          11 non-null     float64
 2   ativo_problematico_baixa renda         11 non-null     float64
 3   ativo_problematico_renda indispon√≠vel  11 non-null     float64
 4   ativo_problematico_renda m√©dia         11 non-null     float64
 5   carteira_ativa_alta renda              11 non-null     float64
 6   carteira_ativa_baixa renda             11 non-null     float64
 7   carteira_ativa_renda indispon√≠vel      11 non-null     float64
 8   carteira_ativa_renda m√©dia             11 non-null     float64
dtypes: float64(8), object(1)
memory usage: 924.0+ bytes
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 8 entries, 0 to 7
Data columns (total 14 columns):
 #   Column                                 Non-Null Count  Dtype  
---  ------                                 --------------  -----  
 0   ano                                    8 non-null      object 
 1   Pontos atendimento                     8 non-null      float64
 2   Bancos autorizados                     8 non-null      float64
 3   Cart. cr√©d. ativos                     8 non-null      float64
 4   Tx. juros PF                           8 non-null      float64
 5   Retorno sobre ativos IF                8 non-null      float64
 6   ativo_problematico_alta renda          8 non-null      float64
 7   ativo_problematico_baixa renda         8 non-null      float64
 8   ativo_problematico_renda indispon√≠vel  8 non-null      float64
 9   ativo_problematico_renda m√©dia         8 non-null      float64
 10  carteira_ativa_alta renda              8 non-null      float64
 11  carteira_ativa_baixa renda             8 non-null      float64
 12  carteira_ativa_renda indispon√≠vel      8 non-null      float64
 13  carteira_ativa_renda m√©dia             8 non-null      float64
dtypes: float64(13), object(1)
memory usage: 1.0+ KB

/Users/brunamoura/monitor/py_files/pf_juros_inflacao_modalidade_endividamentolp.py

/Users/brunamoura/monitor/py_files/pf_ocupacao_modalidade_endividamento.py
<class 'pandas.core.frame.DataFrame'>
Index: 608 entries, 0 to 55
Data columns (total 4 columns):
 #   Column          Non-Null Count  Dtype         
---  ------          --------------  -----         
 0   data_base       608 non-null    datetime64[ns]
 1   ocupacao        608 non-null    object        
 2   modalidade      608 non-null    object        
 3   carteira_ativa  608 non-null    float64       
dtypes: datetime64[ns](1), float64(1), object(2)
memory usage: 23.8+ KB

/Users/brunamoura/monitor/py_files/pf_porte_endividamentolp_desemprego.py

/Users/brunamoura/monitor/py_files/pf_rendimento_modalidade_noperacoes_endividamento.py
<class 'pandas.core.frame.DataFrame'>
Index: 8266 entries, 0 to 503
Data columns (total 6 columns):
 #   Column                    Non-Null Count  Dtype         
---  ------                    --------------  -----         
 0   data_base                 8266 non-null   datetime64[ns]
 1   porte                     8266 non-null   object        
 2   modalidade                8266 non-null   object        
 3   longo_prazo               8266 non-null   float64       
 4   numero_de_operacoes       8266 non-null   float64       
 5   longo_prazo_deflacionado  8266 non-null   float64       
dtypes: datetime64[ns](1), float64(3), object(2)
memory usage: 452.0+ KB

/Users/brunamoura/monitor/py_files/PJ_agro.py

/Users/brunamoura/monitor/py_files/PJ_micro_peq_problematico.py

/Users/brunamoura/monitor/py_files/pj_porte_modalidade_endividamentocp.py
<class 'pandas.core.frame.DataFrame'>
Index: 198 entries, 0 to 17
Data columns (total 4 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   data_base    198 non-null    object 
 1   modalidade   198 non-null    object 
 2   porte        198 non-null    object 
 3   curto_prazo  198 non-null    float64
dtypes: float64(1), object(3)
memory usage: 7.7+ KB
<class 'pandas.core.frame.DataFrame'>
Index: 198 entries, 0 to 17
Data columns (total 5 columns):
 #   Column                    Non-Null Count  Dtype  
---  ------                    --------------  -----  
 0   data_base                 198 non-null    object 
 1   modalidade                198 non-null    object 
 2   porte                     198 non-null    object 
 3   curto_prazo               198 non-null    float64
 4   curto_prazo_deflacionado  198 non-null    float64
dtypes: float64(2), object(3)
memory usage: 9.3+ KB

/Users/brunamoura/monitor/py_files/pf_modalidade_endividamentolp_inflacao.py
<class 'pandas.core.frame.DataFrame'>
Index: 8381 entries, 0 to 503
Data columns (total 4 columns):
 #   Column       Non-Null Count  Dtype         
---  ------       --------------  -----         
 0   data_base    8381 non-null   datetime64[ns]
 1   modalidade   8381 non-null   object        
 2   porte        8381 non-null   object        
 3   longo_prazo  8381 non-null   float64       
dtypes: datetime64[ns](1), float64(1), object(2)
memory usage: 327.4+ KB

/Users/brunamoura/monitor/py_files/pf_modalidade_endividamentolp_juros.py

/Users/brunamoura/monitor/py_files/pf_porte_endividamentolp_inflacao.py
/Users/brunamoura/monitor/venv/lib/python3.11/site-packages/deflatebr/deflate.py:90: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  df['deflated'] = df[['nom_values', 'VALVALOR']].apply(lambda x: ((real_indx/x[1]) * x[0])[0], axis=1)
